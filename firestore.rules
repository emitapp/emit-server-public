rules_version = '2';
//Firestore database is in complete lockdown
//The data stored in Cloud Firestore (which is FCM token data, user metadata and friend recs)
//is managed entirely by the admin ADK and cloud functions
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read their notification data, only cloud functions can write to it
    match /fcmData/{userUid} {
      allow read: if request.auth != null && request.auth.uid == userUid;
      allow write: if false;
    }

    match /userMetadata/{userUid} {
      allow read: if request.auth != null && request.auth.uid == userUid;
      allow write: if false;
    }

    match /publicExtraUserInfo/{userUid} {
      allow read: if request.auth != null
      allow write: if false;
    }

    match /friendRecommendations/{docName} {
      allow read: if request.auth != null && (request.auth.uid in resource.data.uids || docName.matches(".*"+request.auth.uid+".*"));
      allow write: if false;
    }

    match /userEmailVerifications/{userUid}{
      allow read, write: if false
    }


    match /publicFlareUserMetadataPrivate/{userUid}{
      allow read: if false
      allow create, update: if request.auth != null &&
       request.auth.uid == userUid &&
       request.resource.data.keys().hasOnly(['geoHash', 'geolocation']) &&
       request.resource.data.geoHash is string && 
       request.resource.data.geolocation is map &&
       request.resource.data.geolocation.keys().hasOnly(["latitude", "longitude"]) &&
       request.resource.data.geolocation.latitude is float &&
       math.abs(request.resource.data.geolocation.latitude) <= 90 &&
       request.resource.data.geolocation.longitude is float && 
       math.abs(request.resource.data.geolocation.longitude) <= 180
    }

    match /shortenedPublicFlares/{orgoHash}/public_flares_short/{flareID} {
      allow read: if request.auth != null;
      allow write: if false;
    }

    //For collection group queries in the app feed
    match /{path=**}/public_flares/{flareID} {
      allow read: if request.auth.uid == resource.data.owner.uid;
    }

    match /publicFlares/{orgoHash}/public_flares/{flareUid} {
      allow read: if request.auth != null;
      allow write: if false;

      match /responders/{responderUid} {
        allow read: if request.auth != null;
        allow write: if false;
      }
    }
  }
}